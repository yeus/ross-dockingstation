#/bin/bash 

#systemctl restart docker  #in case docker has no internet
#if no internet connection:   systemctl restart docker

#clean all containers:
#docker stop $(docker ps -a -q)
#docker rm $(docker ps -a -q)

#in der TUB:
#
#systemctl stop docker
#sudo dockerd --dns 192.168.0.1 &

#einloggen in der coker rgistry:
#docker login gitlab-registry.tubit.tu-berlin.de
#docker build -t gitlab-registry.tubit.tu-berlin.de/ross-lead-engineers/ross-docking-station/image .
#docker push gitlab-registry.tubit.tu-berlin.de/ross-lead-engineers/ross-docking-station/image

cd ../dockerfiles

docker build -f Dockerfile.ros2_beta1 -t gitlab-registry.tubit.tu-berlin.de/ross-lead-engineers/ross-docking-station/ros2beta1:clean .
docker build -f Dockerfile.ross_r2b1 -t gitlab-registry.tubit.tu-berlin.de/ross-lead-engineers/ross-docking-station/ros2beta1:develop .
docker build -f Dockerfile.ross_compiled -t gitlab-registry.tubit.tu-berlin.de/ross-lead-engineers/ross-docking-station/ros2beta1:compiled .

#docker build -f Dockerfile.ros2_beta2 -t gitlab-registry.tubit.tu-berlin.de/ross-lead-engineers/ross-docking-station/ros2beta2:clean .
#docker build -f Dockerfile.ross_r2b2 -t gitlab-registry.tubit.tu-berlin.de/ross-lead-engineers/ross-docking-station/ros2beta2:develop .

cd - #go back to original directory
